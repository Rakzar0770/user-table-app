{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import UserTable from'./components/UserTable';import FilterControls from'./components/FilterControls';// URL для загрузки данных пользователей\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='https://mocki.io/v1/194e77a9-7f0b-41f3-8607-6bc93e558b74';const App=()=>{const[users,setUsers]=useState([]);// Все пользователи\nconst[filteredUsers,setFilteredUsers]=useState([]);// Отфильтрованные пользователи\n// Загрузка данных при монтировании компонента\nuseEffect(()=>{axios.get(API_URL).then(response=>{setUsers(response.data);setFilteredUsers(response.data);// Изначально показываем всех пользователей\n}).catch(error=>console.error('Ошибка загрузки данных:',error));},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"}),/*#__PURE__*/_jsx(FilterControls,{users:users,onFilterChange:setFilteredUsers}),/*#__PURE__*/_jsx(UserTable,{users:filteredUsers})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","UserTable","FilterControls","jsx","_jsx","jsxs","_jsxs","API_URL","App","users","setUsers","filteredUsers","setFilteredUsers","get","then","response","data","catch","error","console","style","padding","children","onFilterChange"],"sources":["C:/Users/Orezha/user-table-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { User } from './types/User';\nimport UserTable from './components/UserTable';\nimport FilterControls from './components/FilterControls';\n\n// URL для загрузки данных пользователей\nconst API_URL = 'https://mocki.io/v1/194e77a9-7f0b-41f3-8607-6bc93e558b74';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]); // Все пользователи\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]); // Отфильтрованные пользователи\n\n  // Загрузка данных при монтировании компонента\n  useEffect(() => {\n    axios.get<User[]>(API_URL)\n      .then(response => {\n        setUsers(response.data);\n        setFilteredUsers(response.data); // Изначально показываем всех пользователей\n      })\n      .catch(error => console.error('Ошибка загрузки данных:', error));\n  }, []);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Список пользователей</h1>\n      {/* Компонент управления фильтрами */}\n      <FilterControls users={users} onFilterChange={setFilteredUsers} />\n      {/* Компонент таблицы */}\n      <UserTable users={filteredUsers} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CAExD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,OAAO,CAAG,0DAA0D,CAE1E,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAS,EAAE,CAAC,CAAE;AAChD,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAS,EAAE,CAAC,CAAE;AAEhE;AACAD,SAAS,CAAC,IAAM,CACdE,KAAK,CAACa,GAAG,CAASN,OAAO,CAAC,CACvBO,IAAI,CAACC,QAAQ,EAAI,CAChBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC,CACvBJ,gBAAgB,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAE;AACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAAC,CACpE,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,KAAA,QAAKc,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC9BlB,IAAA,OAAAkB,QAAA,CAAI,qHAAoB,CAAI,CAAC,cAE7BlB,IAAA,CAACF,cAAc,EAACO,KAAK,CAAEA,KAAM,CAACc,cAAc,CAAEX,gBAAiB,CAAE,CAAC,cAElER,IAAA,CAACH,SAAS,EAACQ,KAAK,CAAEE,aAAc,CAAE,CAAC,EAChC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}