{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orezha\\\\user-table-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport UserTable from './components/UserTable';\nimport FilterControls from './components/FilterControls';\n\n// URL для загрузки данных пользователей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://mocki.io/v1/194e77a9-7f0b-41f3-8607-6bc93e558b74';\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]); // Все пользователи\n  const [filteredUsers, setFilteredUsers] = useState([]); // Отфильтрованные пользователи\n\n  // Загрузка данных при монтировании компонента\n  useEffect(() => {\n    axios.get(API_URL).then(response => {\n      setUsers(response.data);\n      setFilteredUsers(response.data); // Изначально показываем всех пользователей\n    }).catch(error => console.error('Ошибка загрузки данных:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterControls, {\n      users: users,\n      onFilterChange: setFilteredUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n      users: filteredUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NYDpGT9X0Z5tBX/Pw3UEpCajjE0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","UserTable","FilterControls","jsxDEV","_jsxDEV","API_URL","App","_s","users","setUsers","filteredUsers","setFilteredUsers","get","then","response","data","catch","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/Orezha/user-table-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { User } from './types/User';\nimport UserTable from './components/UserTable';\nimport FilterControls from './components/FilterControls';\n\n// URL для загрузки данных пользователей\nconst API_URL = 'https://mocki.io/v1/194e77a9-7f0b-41f3-8607-6bc93e558b74';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]); // Все пользователи\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]); // Отфильтрованные пользователи\n\n  // Загрузка данных при монтировании компонента\n  useEffect(() => {\n    axios.get<User[]>(API_URL)\n      .then(response => {\n        setUsers(response.data);\n        setFilteredUsers(response.data); // Изначально показываем всех пользователей\n      })\n      .catch(error => console.error('Ошибка загрузки данных:', error));\n  }, []);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Список пользователей</h1>\n      {/* Компонент управления фильтрами */}\n      <FilterControls users={users} onFilterChange={setFilteredUsers} />\n      {/* Компонент таблицы */}\n      <UserTable users={filteredUsers} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,0DAA0D;AAE1E,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAEhE;EACAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACY,GAAG,CAASP,OAAO,CAAC,CACvBQ,IAAI,CAACC,QAAQ,IAAI;MAChBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC;MACvBJ,gBAAgB,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7BrB,OAAA,CAACF,cAAc;MAACM,KAAK,EAAEA,KAAM;MAACkB,cAAc,EAAEf;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElErB,OAAA,CAACH,SAAS;MAACO,KAAK,EAAEE;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvBID,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AAyBnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}